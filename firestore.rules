rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own user data
    match /users/{userId} {
      allow read, update, delete: if request.auth.uid == userId;
      allow create: if request.auth.uid != null;
    }

    // Messages
    match /messages/{messageId} {
      allow read, write: if canAccessMessage(request.auth.uid, resource.data);
    }

    // Conversations
    match /conversations/{conversationId} {
      allow read, write: if canAccessConversation(request.auth.uid, resource.data);
    }

    // Invitations - only admins can create, read, update, delete
    match /invitations/{invitationId} {
      allow read, create, update, delete: if isAdmin(request.auth.uid);
    }

    // Classes - admins can manage, authenticated users can read
    match /classes/{classId} {
      allow read: if request.auth.uid != null;
      allow create, update, delete: if isAdmin(request.auth.uid);
    }

    // Settings - only admins can read and write
    match /settings/{settingId} {
      allow read, write: if isAdmin(request.auth.uid);
    }

    // Helper functions
    function isAdmin(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role == 'admin';
    }
    
    function isTeacherOfClass(userId, classId) {
      return get(/databases/$(database)/documents/classes/$(classId)).data.teacherId == userId;
    }

    function isStudentInClass(userId, classId) {
      return exists(/databases/$(database)/documents/users/$(userId)) &&
             get(/databases/$(database)/documents/users/$(userId)).data.studentProfile.classId == classId;
    }

    function canAccessMessage(userId, messageData) {
      // Admins can access all messages
      if (isAdmin(userId)) {
        return true;
      }
      // Allow if user is a participant in direct message
      if (messageData.type == 'direct') {
        return userId in messageData.participants;
      }
      // Allow if user is part of the class in class message
      if (messageData.type == 'class') {
        return isStudentInClass(userId, messageData.classId) || isTeacherOfClass(userId, messageData.classId);
      }
      return false;
    }

    function canAccessConversation(userId, conversationData) {
      // Admins can access all conversations
      if (isAdmin(userId)) {
        return true;
      }
      // Direct messages are handled by the participants array
      if (conversationData.type == 'direct') {
        return userId in conversationData.participants;
      }
      // Class conversations require checking student or teacher status
      if (conversationData.type == 'class') {
        return isStudentInClass(userId, conversationData.classId) || isTeacherOfClass(userId, conversationData.classId);
      }
      return false;
    }
  }
}
